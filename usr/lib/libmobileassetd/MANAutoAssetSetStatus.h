//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MANAutoAssetSetNotifications, MANAutoAssetSetPolicy, MANAutoAssetSetProgress, NSArray, NSDate, NSDictionary, NSError, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface MANAutoAssetSetStatus : NSObject
{
    _Bool _downloadUserInitiated;	// 8 = 0x8
    NSString *_clientDomainName;	// 16 = 0x10
    NSString *_assetSetIdentifier;	// 24 = 0x18
    NSArray *_configuredAssetEntries;	// 32 = 0x20
    NSArray *_atomicInstancesDownloaded;	// 40 = 0x28
    NSString *_catalogCachedAssetSetID;	// 48 = 0x30
    NSURL *_catalogDownloadedFromLive;	// 56 = 0x38
    NSDate *_catalogLastTimeChecked;	// 64 = 0x40
    NSDate *_catalogPostedDate;	// 72 = 0x48
    NSString *_newerAtomicInstanceDiscovered;	// 80 = 0x50
    NSArray *_newerDiscoveredAtomicEntries;	// 88 = 0x58
    NSString *_latestDownloadedAtomicInstance;	// 96 = 0x60
    NSArray *_latestDowloadedAtomicInstanceEntries;	// 104 = 0x68
    NSDictionary *_allDownloadedAtomicInstanceEntries;	// 112 = 0x70
    NSString *_downloadedCatalogCachedAssetSetID;	// 120 = 0x78
    NSURL *_downloadedCatalogDownloadedFromLive;	// 128 = 0x80
    NSDate *_downloadedCatalogLastTimeChecked;	// 136 = 0x88
    NSDate *_downloadedCatalogPostedDate;	// 144 = 0x90
    MANAutoAssetSetNotifications *_currentNotifications;	// 152 = 0x98
    MANAutoAssetSetPolicy *_currentNeedPolicy;	// 160 = 0xa0
    MANAutoAssetSetPolicy *_schedulerPolicy;	// 168 = 0xa8
    MANAutoAssetSetPolicy *_stagerPolicy;	// 176 = 0xb0
    MANAutoAssetSetProgress *_downloadProgress;	// 184 = 0xb8
    long long _downloadedNetworkBytes;	// 192 = 0xc0
    long long _downloadedFilesystemBytes;	// 200 = 0xc8
    NSDictionary *_currentLockUsage;	// 208 = 0xd0
    NSDictionary *_selectorsForStaging;	// 216 = 0xd8
    NSError *_availableForUseError;	// 224 = 0xe0
    NSError *_newerVersionError;	// 232 = 0xe8
}

+ (id)newSelectorsForStagingSummary:(id)arg1;	// IMP=0x0010000000091fd2
+ (id)newCurrentLockUsageDetailed:(id)arg1;	// IMP=0x0010000000091ef8
+ (id)newCurrentLockUsageSummary:(id)arg1;	// IMP=0x0010000000091b12
+ (_Bool)supportsSecureCoding;	// IMP=0x001000000008f9d7
- (void).cxx_destruct;	// IMP=0x00000000000925ff
@property(retain, nonatomic) NSError *newerVersionError; // @synthesize newerVersionError=_newerVersionError;
@property(retain, nonatomic) NSError *availableForUseError; // @synthesize availableForUseError=_availableForUseError;
@property(retain, nonatomic) NSDictionary *selectorsForStaging; // @synthesize selectorsForStaging=_selectorsForStaging;
@property(retain, nonatomic) NSDictionary *currentLockUsage; // @synthesize currentLockUsage=_currentLockUsage;
@property(nonatomic) long long downloadedFilesystemBytes; // @synthesize downloadedFilesystemBytes=_downloadedFilesystemBytes;
@property(nonatomic) long long downloadedNetworkBytes; // @synthesize downloadedNetworkBytes=_downloadedNetworkBytes;
@property(retain, nonatomic) MANAutoAssetSetProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) _Bool downloadUserInitiated; // @synthesize downloadUserInitiated=_downloadUserInitiated;
@property(retain, nonatomic) MANAutoAssetSetPolicy *stagerPolicy; // @synthesize stagerPolicy=_stagerPolicy;
@property(retain, nonatomic) MANAutoAssetSetPolicy *schedulerPolicy; // @synthesize schedulerPolicy=_schedulerPolicy;
@property(retain, nonatomic) MANAutoAssetSetPolicy *currentNeedPolicy; // @synthesize currentNeedPolicy=_currentNeedPolicy;
@property(retain, nonatomic) MANAutoAssetSetNotifications *currentNotifications; // @synthesize currentNotifications=_currentNotifications;
@property(retain, nonatomic) NSDate *downloadedCatalogPostedDate; // @synthesize downloadedCatalogPostedDate=_downloadedCatalogPostedDate;
@property(retain, nonatomic) NSDate *downloadedCatalogLastTimeChecked; // @synthesize downloadedCatalogLastTimeChecked=_downloadedCatalogLastTimeChecked;
@property(retain, nonatomic) NSURL *downloadedCatalogDownloadedFromLive; // @synthesize downloadedCatalogDownloadedFromLive=_downloadedCatalogDownloadedFromLive;
@property(retain, nonatomic) NSString *downloadedCatalogCachedAssetSetID; // @synthesize downloadedCatalogCachedAssetSetID=_downloadedCatalogCachedAssetSetID;
@property(retain, nonatomic) NSDictionary *allDownloadedAtomicInstanceEntries; // @synthesize allDownloadedAtomicInstanceEntries=_allDownloadedAtomicInstanceEntries;
@property(retain, nonatomic) NSArray *latestDowloadedAtomicInstanceEntries; // @synthesize latestDowloadedAtomicInstanceEntries=_latestDowloadedAtomicInstanceEntries;
@property(retain, nonatomic) NSString *latestDownloadedAtomicInstance; // @synthesize latestDownloadedAtomicInstance=_latestDownloadedAtomicInstance;
@property(retain, nonatomic) NSArray *newerDiscoveredAtomicEntries; // @synthesize newerDiscoveredAtomicEntries=_newerDiscoveredAtomicEntries;
@property(retain, nonatomic) NSString *newerAtomicInstanceDiscovered; // @synthesize newerAtomicInstanceDiscovered=_newerAtomicInstanceDiscovered;
@property(retain, nonatomic) NSDate *catalogPostedDate; // @synthesize catalogPostedDate=_catalogPostedDate;
@property(retain, nonatomic) NSDate *catalogLastTimeChecked; // @synthesize catalogLastTimeChecked=_catalogLastTimeChecked;
@property(retain, nonatomic) NSURL *catalogDownloadedFromLive; // @synthesize catalogDownloadedFromLive=_catalogDownloadedFromLive;
@property(retain, nonatomic) NSString *catalogCachedAssetSetID; // @synthesize catalogCachedAssetSetID=_catalogCachedAssetSetID;
@property(retain, nonatomic) NSArray *atomicInstancesDownloaded; // @synthesize atomicInstancesDownloaded=_atomicInstancesDownloaded;
@property(retain, nonatomic) NSArray *configuredAssetEntries; // @synthesize configuredAssetEntries=_configuredAssetEntries;
@property(retain, nonatomic) NSString *assetSetIdentifier; // @synthesize assetSetIdentifier=_assetSetIdentifier;
@property(readonly, retain, nonatomic) NSString *clientDomainName; // @synthesize clientDomainName=_clientDomainName;
- (id)summary;	// IMP=0x0000000000090d44
- (id)description;	// IMP=0x000000000008ff6f
- (id)copy;	// IMP=0x000000000008f9df
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000008f410
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000008eab0
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withCatalogCachedAssetSetID:(id)arg5 withCatalogDownloadedFromLive:(id)arg6 withCatalogLastTimeChecked:(id)arg7 withCatalogPostedDate:(id)arg8 withNewerAtomicInstanceDiscovered:(id)arg9 withNewerDiscoveredAtomicEntries:(id)arg10 withLatestDownloadedAtomicInstance:(id)arg11 withLatestDowloadedAtomicInstanceEntries:(id)arg12 withDownloadedCatalogCachedAssetSetID:(id)arg13 withDownloadedCatalogDownloadedFromLive:(id)arg14 withDownloadedCatalogLastTimeChecked:(id)arg15 withDownloadedCatalogPostedDate:(id)arg16 withCurrentNotifications:(id)arg17 withCurrentNeedPolicy:(id)arg18 withSchedulerPolicy:(id)arg19 withStagerPolicy:(id)arg20 withDownloadUserInitiated:(_Bool)arg21 withDownloadProgress:(id)arg22 withDownloadedNetworkBytes:(long long)arg23 withDownloadedFilesystemBytes:(long long)arg24 withCurrentLockUsage:(id)arg25 withSelectorsForStaging:(id)arg26 withAvailableForUseError:(id)arg27 withNewerVersionError:(id)arg28;	// IMP=0x000000000008e66d
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withCatalogCachedAssetSetID:(id)arg5 withCatalogDownloadedFromLive:(id)arg6 withCatalogLastTimeChecked:(id)arg7 withCatalogPostedDate:(id)arg8 withNewerAtomicInstanceDiscovered:(id)arg9 withNewerDiscoveredAtomicEntries:(id)arg10 withLatestDownloadedAtomicInstance:(id)arg11 withLatestDowloadedAtomicInstanceEntries:(id)arg12 withCurrentNotifications:(id)arg13 withCurrentNeedPolicy:(id)arg14 withSchedulerPolicy:(id)arg15 withStagerPolicy:(id)arg16 withDownloadUserInitiated:(_Bool)arg17 withDownloadProgress:(id)arg18 withDownloadedNetworkBytes:(long long)arg19 withDownloadedFilesystemBytes:(long long)arg20 withCurrentLockUsage:(id)arg21 withSelectorsForStaging:(id)arg22 withAvailableForUseError:(id)arg23 withNewerVersionError:(id)arg24;	// IMP=0x000000000008e2bf
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withNewerAtomicInstanceDiscovered:(id)arg5 withNewerDiscoveredAtomicEntries:(id)arg6 withLatestDownloadedAtomicInstance:(id)arg7 withLatestDowloadedAtomicInstanceEntries:(id)arg8 withAllDownloadedAtomicInstanceEntries:(id)arg9 withCurrentNotifications:(id)arg10 withCurrentNeedPolicy:(id)arg11 withSchedulerPolicy:(id)arg12 withStagerPolicy:(id)arg13 withDownloadUserInitiated:(_Bool)arg14 withDownloadProgress:(id)arg15 withDownloadedNetworkBytes:(long long)arg16 withDownloadedFilesystemBytes:(long long)arg17 withCurrentLockUsage:(id)arg18 withSelectorsForStaging:(id)arg19 withAvailableForUseError:(id)arg20 withNewerVersionError:(id)arg21;	// IMP=0x000000000008e221

@end

