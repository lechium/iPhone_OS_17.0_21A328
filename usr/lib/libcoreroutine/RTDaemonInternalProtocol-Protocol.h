//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <coreroutine/NSObject-Protocol.h>

@class NSArray, NSDate, NSDictionary, NSNumber, NSSet, NSString, NSURL, NSUUID, RTFetchFingerprintsOptions, RTFingerprint, RTLocation, RTLocationOfInterest, RTLocationOfInterestVisit, RTPlaceInferenceOptions, RTScenarioTrigger, RTSignalGeneratorOptions, RTVisit;

@protocol RTDaemonInternalProtocol <NSObject>
- (void)updateIntermittentGNSSRegistrationOverrideState:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)fetchIntermittentGNSSRegistrationStateWithReply:(void (^)(_Bool, NSError *))arg1;
- (void)fetchBuildingPolygonsFromLocations:(NSArray *)arg1 radius:(double)arg2 limit:(unsigned long long)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)displayWorkoutDistanceRecordsWithHandler:(void (^)(NSError *))arg1;
- (void)deleteWorkout:(NSUUID *)arg1 reply:(void (^)(NSError *))arg2;
- (void)processNewlyAddedWorkout:(NSUUID *)arg1 reply:(void (^)(NSError *))arg2;
- (void)updateRelevanceScoresWithReply:(void (^)(NSError *))arg1;
- (void)forceProcessWorkoutsClearClusters:(_Bool)arg1 clearExistingDistanceMatrix:(_Bool)arg2 buildDistanceMatrix:(_Bool)arg3 syncClustersToHealhtKit:(_Bool)arg4 syncClustersToWatch:(_Bool)arg5 filteringDistanceThreshold:(double)arg6 topNWorkouts:(unsigned long long)arg7 isSchedulerTriggered:(_Bool)arg8 reply:(void (^)(NSError *))arg9;
- (void)logSafetyCacheWithReply:(void (^)(NSError *))arg1;
- (void)logDatabasesWithReply:(void (^)(NSError *))arg1;
- (void)extendLifetimeOfVisitsWithIdentifiers:(NSSet *)arg1 toExpireOn:(NSDate *)arg2 reply:(void (^)(NSError *))arg3;
- (void)expireLifetimeOfVisitsWithIdentifiers:(NSSet *)arg1 expirationDate:(NSDate *)arg2 reply:(void (^)(NSError *))arg3;
- (void)submitTransitMetricsWithReply:(void (^)(NSError *))arg1;
- (void)submitMetrics:(NSDictionary *)arg1 metricName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)fetchMotionActivitiesFromStartDate:(NSDate *)arg1 endDate:(NSDate *)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)fetchFMCEnabledWithReply:(void (^)(_Bool, NSError *))arg1;
- (void)injectWiFiAccessPointWithMac:(NSString *)arg1 rssi:(long long)arg2 channel:(long long)arg3 age:(double)arg4 date:(NSDate *)arg5 reply:(void (^)(NSError *))arg6;
- (void)injectFingerprintWithSettledState:(_Bool)arg1 start:(NSDate *)arg2 reply:(void (^)(NSError *))arg3;
- (void)injectFingerprintWithIdentifier:(NSUUID *)arg1 settledState:(unsigned long long)arg2 start:(NSDate *)arg3 reply:(void (^)(NSError *))arg4;
- (void)fetchWiFiAccessPointsForFingerprint:(RTFingerprint *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchFingerprintsWithOptions:(RTFetchFingerprintsOptions *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;
- (void)queryProvider:(NSString *)arg1 options:(RTPlaceInferenceOptions *)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)fetchInferredMapItemForVisitIdentifier:(NSUUID *)arg1 reply:(void (^)(RTInferredMapItem *, NSError *))arg2;
- (void)fetchFusionCandidatesForVisitIdentifier:(NSUUID *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;
- (void)submitHintAtLocation:(RTLocation *)arg1 reply:(void (^)(NSError *))arg2;
- (void)tearDownPersistenceStack:(void (^)(NSError *))arg1;
- (void)mirroringDelegateSetupState:(void (^)(long long, NSError *))arg1;
- (void)performZoneResetMirroringRequest:(void (^)(NSError *))arg1;
- (void)performExportMirroringRequest:(void (^)(NSError *))arg1;
- (void)performImportMirroringRequest:(void (^)(NSError *))arg1;
- (void)injectRealtimeVisit:(RTVisit *)arg1 reply:(void (^)(NSError *))arg2;
- (void)fetchVisitsBetweenStartDate:(NSDate *)arg1 endDate:(NSDate *)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)simulateVisit:(RTVisit *)arg1 reply:(void (^)(NSError *))arg2;
- (void)reconstructTransitionsWithReply:(void (^)(NSError *))arg1;
- (void)updateTransitionWithIdentifier:(NSUUID *)arg1 modeOfTransportation:(long long)arg2 reply:(void (^)(NSError *))arg3;
- (void)injectSignalForSignalGeneratorOptions:(RTSignalGeneratorOptions *)arg1 reply:(void (^)(NSError *))arg2;
- (void)injectLocations:(NSArray *)arg1 reply:(void (^)(NSError *))arg2;
- (void)storeHints:(NSArray *)arg1 reply:(void (^)(NSError *))arg2;
- (void)forceEventModelRefreshWithReply:(void (^)(NSError *))arg1;
- (void)updateAssetServerURL:(NSURL *)arg1 assetType:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)forceUpdateAssetMetadataWithReply:(void (^)(NSError *))arg1;
- (void)simulateScenarioTrigger:(RTScenarioTrigger *)arg1 reply:(void (^)(RTScenarioTrigger *, NSError *))arg2;
- (void)forcePlaceTypeClassificationWithReply:(void (^)(NSError *))arg1;
- (void)forceRelabeling:(void (^)(NSError *))arg1;
- (void)fetchVisitsWithReply:(void (^)(NSArray *, NSError *))arg1;
- (void)fetchStoredLocationsCountFromDate:(NSDate *)arg1 toDate:(NSDate *)arg2 uncertainty:(double)arg3 limit:(unsigned long long)arg4 reply:(void (^)(unsigned long long, NSError *))arg5;
- (void)fetchLocationsOfInterestWithVisitsWithinDistance:(NSNumber *)arg1 location:(RTLocation *)arg2 reply:(void (^)(NSArray *, NSError *))arg3;
- (void)clearAllLocationsOfInterestWithReply:(void (^)(NSError *))arg1;
- (void)injectVisit:(RTLocationOfInterestVisit *)arg1 locationOfInterest:(RTLocationOfInterest *)arg2 reply:(void (^)(NSError *))arg3;
- (void)injectLocationOfInterest:(RTLocationOfInterest *)arg1 reply:(void (^)(NSError *))arg2;
- (void)forceSequentialClusterIdentification:(void (^)(NSError *))arg1;
- (void)fetchAllLocationsOfInterestWithReply:(void (^)(NSArray *, NSError *))arg1;
- (void)fetchPathToBackupWithReply:(void (^)(NSString *, NSError *))arg1;
- (void)fetchDataVaultPath:(void (^)(NSString *, NSError *))arg1;
@end

